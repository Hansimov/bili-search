// This file defines grammar for the DSL used by blbl.top search engine
// author: @Hansimov

start: expr | expr_with_error
    ?expr: atom_expr | pa_expr | or_expr | co_expr | and_expr
        or_expr: expr (or expr)+
        co_expr: expr expr+
        and_expr: expr (and expr)+
        pa_expr: lp expr? rp
        atom_expr: date_expr | user_expr | uid_expr | stat_expr | region_expr | word_expr | text_expr
    ?expr_with_error: (expr | expr_error)+
        expr_error: text_catch

// ---------- basic operators ---------- //
WT: " "
EQ: WT* "="
EQS: (WT* EQ)+
MI: "-"
PL: "+"
NQ: "!" | "！"
LT: "<" | "《"
GT: ">" | "》"
AT: "@"

AND: "&"
OR: "|"
ANDS: (WT* AND WT*)+
ORS: (WT* OR WT*)+
and: ANDS
or: ORS

NEQ: (NQ | MI) EQ
PEQ: PL EQ
LEQ: LT EQ
GEQ: GT EQ
NEQS: (NQ | MI) EQS
PEQS: PL EQS
LEQS: LT EQS
GEQS: GT EQS

eq: EQ
lt: LT
gt: GT
neq: NEQ
peq: PEQ
leq: LEQ
geq: GEQ

eqs: EQS
neqs: NEQS
peqs: PEQS
leqs: LEQS
geqs: GEQS

eq_list: EQS
neq_list: NEQS

op_rel: eqs | lt | gt | neqs | leqs | geqs
op_list: eq_list | neq_list

COMMA: "," | "，"
COLON: ":" | "："
LP: "(" | "（"
RP: ")" | "）"
LK: "[" | "【"
RK: "]" | "】"

COLONS: (WT* COLON WT*)+
COMMAS: (WT* COMMA WT*)+
colon: COLONS
comma: COMMAS
lb: lp | lk
    lp: LP
    lk: LK
rb: rp | rk
    rp: RP
    rk: RK

lb_comma: lb comma?
comma_rb: comma? rb

// ---------- date exprs ---------- //
date_expr: colon? date_key date_op_val
    date_key: /(?i:(日期|时间|rq|date|dt|d))/
    date_op_val: date_op_val_single | date_op_val_list
        date_op_val_single: date_op_single date_val_single
            date_op_single: op_rel
            date_val_single: date_num_unit | date_iso | date_recent
                date_num_unit: date_num date_unit
                    date_num: digits
                    date_unit: date_unit_year | date_unit_month | date_unit_week | date_unit_day | date_unit_hour
                date_iso: yyyymmddhh | yyyymmdd | yyyymm | yyyy | mmddhh | mmdd
                    yyyymmddhh: yyyy sep_ymd mm sep_ymd dd sep_ymd hh
                    yyyymmdd: yyyy sep_ymd mm sep_ymd dd
                    yyyymm: yyyy sep_ymd mm
                    mmddhh: mm sep_ymd dd sep_dh hh
                    mmdd: mm sep_ymd dd
                date_recent: date_this | date_last
                    date_this: "this" sep_en date_unit
                    date_last: "last" sep_en date_unit
        date_op_val_list: date_op_list date_val_list
            date_op_list: op_list
            date_val_list: lb_comma date_val_left? comma? date_val_right? comma_rb
                date_val_left: date_val_single
                date_val_right: date_val_single

digits: /[0-9]+/
yyyy: /\d{4}/
mm: /\d{1,2}/
dd: /\d{1,2}/
hh: /\d{1,2}/

sep_ymd: /[-\/\.]+/
sep_hms: /[_\.]+/
sep_dh: /[\s\.]+/
sep_en: /[\_\.\s\-]+/

date_unit_year: /(?i:(年|years?|yr|y))/
date_unit_month: /(?i:(个?月|months?|mon|m))/
date_unit_week: /(?i:(周|weeks?|wk|w))/
date_unit_day: /(?i:(日|天|days?|d))/
date_unit_hour: /(?i:(个?小时|时|hours?|hr|h))/


// ---------- user exprs ---------- //
user_expr: colon? user_key_op user_val
    user_key_op: user_key user_op | user_at
        user_key: /(?i:(用户|昵称|作者|name|author|uploader|up|user|u))/
        user_op: eq | neq
        user_at: at_neq | at_eq
    user_val: user_val_single | user_val_list
        user_val_single: text_quoted | text_strict
        user_val_list: user_val_list_lr | user_val_list_no_lr
            user_val_list_lr: lb_comma (user_val_single)? (comma user_val_single)* comma_rb
            user_val_list_no_lr: comma? user_val_single (comma user_val_single)*

uid_expr: colon? uid_key uid_op_val
    uid_key: /(?i:(uid|mid))/
    uid_op_val: uid_op_val_single | uid_op_val_list
        uid_op_val_single: op_rel uid_val_single
            uid_val_single: digits
        uid_op_val_list: op_rel uid_val_list
            uid_val_list: uid_val_list_lr | uid_val_list_no_lr
                uid_val_list_lr: lb_comma (uid_val_single)? (comma uid_val_single)* comma_rb
                uid_val_list_no_lr: comma? uid_val_single (comma uid_val_single)*

at_eq: AT
at_neq: AT NQ

// ---------- stat exprs ---------- //
stat_expr: colon? stat_key stat_op_val
    stat_key: view_key | like_key | coin_key | favorite_key | reply_key | danmaku_key | share_key
        view_key: /(?i:(播放|bofang|bof|bf|view|vw|v))/
        like_key: /(?i:(点赞|dianzan|dianz|dz|like|lk|l))/
        coin_key: /(?i:(投币|toubi|toub|tb|coin|cn|c))/
        favorite_key: /(?i:(收藏|shouchang|shouc|sc|star|favorite|fav|fv))/
        reply_key: /(?i:(评论|回复|pinglun|pingl|huifu|huif|pl|hf|reply|rp))/
        danmaku_key: /(?i:(弹幕|danmu|danm|danmaku|dm))/
        share_key: /(?i:(分享|转发|fenxiang|fenx|zhuanfa|zhuanf|fx|zf|share|sh))/
    stat_op_val: stat_op_val_single | stat_op_val_list
        stat_op_val_single: stat_op stat_val_single
            stat_op: op_rel
            stat_val_single: stat_num stat_unit?
                stat_num: digits
                stat_unit: /[百千kK万wWmM亿]+/
        stat_op_val_list: op_rel stat_val_list
            stat_val_list: stat_val_list_lr | stat_val_list_no_lr
                stat_val_list_lr: lb_comma (stat_val_single)? (comma stat_val_single)* comma_rb
                stat_val_list_no_lr: comma? stat_val_single (comma stat_val_single)*


// ---------- region exprs ---------- //
region_expr: colon? region_key region_op region_val
    region_key: /(?i:(分区|fenqu|fq|region|rid|r))/
    region_op: op_list
    region_val: region_val_single | region_val_list
        region_val_single: digits | text_strict
        region_val_list: region_val_list_lr | region_val_list_no_lr
            region_val_list_lr: lb_comma (region_val_single)? (comma region_val_single)* comma_rb
            region_val_list_no_lr: comma? region_val_single (comma region_val_single)*


// ---------- word exprs ---------- //
word_expr: colon? word_key word_op word_val
    word_key: /(?i:(关键字|keyword|key|k))/
    word_op: op_list
    word_val: word_val_single | word_val_list
        word_val_single: text_expr
        word_val_list: word_val_list_lr | word_val_list_no_lr
            word_val_list_lr: lb_comma (word_val_single)? (comma word_val_single)* comma_rb
            word_val_list_no_lr: comma? word_val_single (comma word_val_single)*

text_expr: text_quoted | text_strict | text_plain

text_quoted: /[“][^“”]+[”]/ | /["][^"]+["]/
text_strict: /[^\s\n"“”\|\&:：!！,，（）【】<>《》\(\)\[\]]+/
text_plain:  /[^\s\n"“”\|\&"（）【】\(\)\[\]]+/
text_catch:  /[\s\n"“”\|\&（）【】\(\)\[\]]+/

%import common.WS
%ignore WS